fn @putint(#x: i32) -> ();
fn @putch(#x: i32) -> ();
fn @putarray(#n: i32, #arr: i32*) -> ();
fn @getint() -> i32;
fn @getch() -> i32;
fn @getarray(#n: i32, #arr: i32*) -> ();
fn @main() -> i32 {
%entry:
  let %ret_val.addr = alloca i32, 1
  let %a = alloca i32, 1
  let %b = alloca i32, 1
  let %0 = call @getint
  let %1 = load %a
  let %2 = store %0, %1
  let %3 = call @getint
  let %4 = load %b
  let %5 = store %3, %4
  let %6 = load %a
  let %7 = load %b
  let %8 = add %6, %7
  let %9 = call @putint, %8
  let %10 = store 0, %ret_val.addr
  jmp label %exit
  jmp label %exit
%after return:
  jmp label %exit
%exit:
  let %14 = load %ret_val.addr
  ret %14
}
