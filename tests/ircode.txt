fn @putint(#x: i32) -> ();

fn @putch(#x: i32) -> ();

fn @putarray(#n: i32, #arr: i32*) -> ();

fn @getint() -> i32;

fn @getch() -> i32;

fn @getarray(#n: i32, #arr: i32*) -> ();

fn @doubleWhile() -> i32{
%entry:
let %ret_val.addr: i32* = alloca i32, 1
let %i: i32* = alloca i32, 1

let %j: i32* = alloca i32, 1

let %1: () = store , %ret_val.addr: i32*
jmp label %exit
%exit:
let %2: i32 = load %ret_val.addr: i32*
ret %2: i32
}
fn @main() -> i32{
%entry:
let %ret_val.addr: i32* = alloca i32, 1
let %3: () = store 0, %ret_val.addr: i32*
jmp label %exit
%exit:
let %4: i32 = load %ret_val.addr: i32*
ret %4: i32
}
